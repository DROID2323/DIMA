# –û—Å–Ω–æ–≤–Ω—ñ —Ç–∏–ø–∏ –¥–∞–Ω–∏—Ö

a = "–∑–º—ñ–Ω–Ω–∞ –∑ —Ç–µ–∫—Å—Ç–æ–º"
b = 1  # —á–∏—Å–ª–æ–≤–∞ –∑–º—ñ–Ω–Ω–∞
b1 = 1.1  # –¥—ñ–π—Å–Ω–µ —á–∏—Å–ª–æ
c = ["a", 1, 1.25, "–°–ª–æ–≤–æ", a]  # —Å–ø–∏—Å–æ–∫ (list)
d = {"a": "–°–ª–æ–≤–æ", "b": 1, a: b}  # —Å–ª–æ–≤–Ω–∏–∫ (dict)
e = ("a", a)  # –∫–æ—Ä—Ç–µ–∂ (tuple)
f = {"ss", str(b) + a}  # –º–Ω–æ–∂–∏–Ω–∞ (set)

print("a =", a)
print("b =", b)
print("–°–ø–∏—Å–æ–∫:", c)
print("–°–ª–æ–≤–Ω–∏–∫:", d)
print("–ö–æ—Ä—Ç–µ–∂:", e)
print("–ú–Ω–æ–∂–∏–Ω–∞:", f)

# ------------------------
# 2. –í–±—É–¥–æ–≤–∞–Ω—ñ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏ —Ç–∞ –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω—ñ —Å–ª–æ–≤–∞
# ------------------------
print("–ü–µ—Ä—à–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞:", True)
print(f"–Ø–∫ –º–æ–∂–Ω–∞ —Ç–∞–∫ —Ä–æ–±–∏—Ç–∏ –≤–∏–≤—ñ–¥? {False}")

import sys
help("keywords")

# ------------------------
# 3. –í–±—É–¥–æ–≤–∞–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
# ------------------------
print(abs(-12.5), "—î —Ä—ñ–≤–Ω–∏–º", abs(12.5))
print("–ú–∞–∫—Å–∏–º—É–º —ñ–∑ 1, 2, 3:", max(1, 2, 3))
print("–ú—ñ–Ω—ñ–º—É–º —ñ–∑ 5, 7, 9:", min(5, 7, 9))
print("–°—É–º–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤:", sum([1, 2, 3, 4, 5]))

# ------------------------
# 4. –¶–∏–∫–ª–∏ (for, while)
# ------------------------
letters = ["a", "b", "c"]
for i in range(len(letters)):
    print(f"–ù–∞ –ø–æ–∑–∏—Ü—ñ—ó {i} –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –±—É–∫–≤–∞ {letters[i]}")
else:
    print("–ö—ñ–Ω–µ—Ü—å —Ü–∏–∫–ª—É for!")

count = 0
while count < 3:
    print("–†–∞—Ö—É–Ω–æ–∫:", count)
    count += 1

# ------------------------
# 5. –†–æ–∑–≥–∞–ª—É–∂–µ–Ω–Ω—è (if-else)
# ------------------------
from random import randint
A = randint(0, 1)
print(f"–ó–Ω–∞—á–∏—Ç—å A={A}" if A else f"–ê–ª–µ –º–æ–∂–µ –±—É—Ç–∏ —â–æ A={A}")

B = 5
if B > 0:
    print("B –¥–æ–¥–∞—Ç–Ω–µ")
elif B == 0:
    print("B –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é")
else:
    print("B –≤—ñ–¥‚Äô—î–º–Ω–µ")

# ------------------------
# 6. try ‚Üí except ‚Üí finally
# ------------------------
A = 0
try:
    print("–©–æ –±—É–¥–µ —è–∫—â–æ", 10 / A, "?")
except Exception as e:
    print("–ù–µ–≤–∂–µ —Ü–µ –ø–æ–º–∏–ª–∫–∞ >", e)
finally:
    print("–û —Ü–µ —Ç–∞–∫ –Ω–∞ —Ç–æ–±—ñ!")

# ------------------------
# 7. –ö–æ–Ω—Ç–µ–∫—Å—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä with
# ------------------------
with open("example.txt", "w", encoding="utf-8") as f:
    f.write("–¶–µ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª!\nPython –ø—Ä–∞—Ü—é—î!")

with open("example.txt", "r", encoding="utf-8") as f:
    for i, line in enumerate(f):
        print(f"{i + 1}) {line.strip()}")

# ------------------------
# 8. –õ—è–º–±–¥–∞-—Ñ—É–Ω–∫—Ü—ñ—ó
# ------------------------
def a_b_func(a, b):
    return a, b

this_is_lambda = lambda first, age: f"–¶–µ–π –∫–æ–¥ –Ω–∞–ø–∏—Å–∞–≤: {first}, –º–µ–Ω—ñ {age} —Ä–æ–∫—ñ–≤"

print("–¶–µ –ø—Ä–æ—Å—Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è:", a_b_func("x", "y"))
print("–ê —Ü–µ –ª—è–º–±–¥–∞:", this_is_lambda("–ë–æ–≥–¥–∞–Ω", 18))
print(this_is_lambda(*a_b_func("Python", 30)))

# ------------------------
# 9. –ü—Ä–∏–∫–ª–∞–¥ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ AI
# ------------------------
name = input("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è: ")
print(f"–ü—Ä–∏–≤—ñ—Ç, {name}! –í—ñ—Ç–∞—é —É —Å–≤—ñ—Ç—ñ Python üêç")

for i in range(3):
    print(f"–¶–∏–∫–ª –Ω–æ–º–µ—Ä {i + 1}")